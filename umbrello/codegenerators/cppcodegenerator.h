
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/*  This code generated by: 
 *      Author : thomas
 *      Date   : Thu Jun 19 2003
 */



#ifndef CPPCODEGENERATOR_H
#define CPPCODEGENERATOR_H

#include <qstring.h>
#include "../codegenerator.h"
#include "../umldoc.h"
#include "cppmakecodedocument.h"

class CPPHeaderCodeDocument;
class CodeBlockWithComments;
class KConfig;

class CPPCodeGenerator : public CodeGenerator
{
	Q_OBJECT
public:

        static const bool DEFAULT_BUILD_MAKEFILE = false;

	// Constructors/Destructors
	//  

	/**
	 * Basic Constructor
	 */
	CPPCodeGenerator ( UMLDoc * doc , const char * name);

	/**
	 * Empty Destructor
	 */
	virtual ~CPPCodeGenerator ( );

        /**
         * Set the value of m_createMakefile
         * @param new_var the new value of m_createMakefile
         */
        void setCreateProjectMakefile ( bool new_var );

        /**
         * Get the value of m_createMakefile
         * @return the value of m_createMakefile
         */
        bool getCreateProjectMakefile ( );

	// Public attribute accessor methods
	//  

	/**
	 * Add a header CodeDocument object from m_headercodedocumentVector List
	 */
	bool addHeaderCodeDocument ( CPPHeaderCodeDocument * doc ); 

	/**
	 * Remove a header CodeDocument object from m_headercodedocumentVector List
 	 */
	bool removeHeaderCodeDocument ( CPPHeaderCodeDocument * remove_object );

        virtual bool isType (QString & type);

        bool saveToXMI ( QDomDocument & doc, QDomElement & root );
        void loadFromXMI(QDomElement & node);

	QString getLanguage(); 

	// should be 'static' method
        QString scopeToCPPDecl(Uml::Scope scope);

	// generate 2 different types of classifier code documents.
	CodeDocument * newClassifierCodeDocument (UMLClassifier * classifier);
	CPPHeaderCodeDocument * newHeaderClassifierCodeDocument (UMLClassifier * classifier);

protected:


	/**
	 * @return	CPPMakeCodeDocument
	 * @param	this 
	 */
	CPPMakefileCodeDocument * newMakefileCodeDocument ( );

	/**
	 * Find a cppheadercodedocument by the given classifier.
	 * @return      CPPHeaderCodeDocument
	 * @param       classifier
	 */
	CPPHeaderCodeDocument * findHeaderCodeDocumentByClassifier (UMLClassifier * classifier ); 

	void initFromParentDocument( );

private:

	bool m_createMakefile;

	// a separate list for recording the header documents
	QPtrList<CPPHeaderCodeDocument> m_headercodedocumentVector;

	void initAttributes ( ) ;

};

#endif // CPPCODEGENERATOR_H

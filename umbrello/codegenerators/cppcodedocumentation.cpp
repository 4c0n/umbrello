
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/*  This code generated by: 
 *      Author : thomas
 *      Date   : Mon Sep 1 2003
 */

#include <kdebug.h>
#include "cppcodedocumentation.h"
#include "../classifiercodedocument.h"
// #include "cppcodegenerationpolicy.h"

// Constructors/Destructors
//  

CPPCodeDocumentation::CPPCodeDocumentation ( ClassifierCodeDocument * doc, QString text ) 
    : CodeComment ((CodeDocument*) doc, text)
{

};

CPPCodeDocumentation::CPPCodeDocumentation ( ClassifierCodeDocument * doc ) 
    : CodeComment ((CodeDocument*) doc)
{

};

CPPCodeDocumentation::~CPPCodeDocumentation ( ) { };

//  
// Methods
//  


// Accessor methods
//  

// Other methods
//  

/**
 * Save the XMI representation of this object
 * @return      bool    status of save
 */
bool CPPCodeDocumentation::saveToXMI ( QDomDocument & doc, QDomElement & root ) {
        bool status = true;

        QDomElement blockElement = doc.createElement( "cppcodedocumentation" );
        setAttributesOnNode(doc, blockElement); // as we added no additional fields to this class we may
                                                // just use parent TextBlock method
        root.appendChild( blockElement );

        return status;
}

/**
 * load params from the appropriate XMI element node.
 */
void CPPCodeDocumentation::loadFromXMI ( QDomElement & root ) {
        setAttributesFromNode(root);
}

/**
 * @return	QString
 */
QString CPPCodeDocumentation::toString ( ) 
{

	QString output = "";

        // simple output method
        if(getWriteOutText())
        {
		bool useDoubleDashOutput = false;

		// need to figure out output type from cpp policy
// FIX
/*
		CPPCodeGenerationPolicy * p = ((CPPSourceCodeDocument*)getParentDocument())->getCPPPolicy();
		if(p->getCommentStyle() == CPPCodeGenerationPolicy::SlashStar)
			useDoubleDashOutput = false;
*/

		QString indent = getIndentationString();
                QString endLine = getNewLineEndingChars();
		QString body = getText();
		if(useDoubleDashOutput) 
		{
			if(!body.isEmpty())
                		output.append(formatMultiLineText (body, indent +"// ", endLine));
		} else {
                	output.append(indent+"/**"+endLine);
			if(!body.isEmpty())
                		output.append(formatMultiLineText (body, indent +" * ", endLine));
                	output.append(indent+" */"+endLine);
		}
        }

        return output; 
}



/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/*  This code generated by: 
 *      Author : thomas
 *      Date   : Thu Jun 19 2003
 */

#include <iostream.h>
#include <kconfig.h>
#include "cppcodegenerator.h"

// Constructors/Destructors
//  

CPPCodeGenerator::CPPCodeGenerator ( UMLDoc * parentDoc , const char * name) 
    : CodeGenerator( parentDoc, name ) {

	//m_parentDoc = parentDoc; // this should be done by the call to the parent constructor?
cerr<<"CPPCodeGenerator "<<this<<" created with parent document:"<<parentDoc<<endl;

	initAttributes();
};

CPPCodeGenerator::~CPPCodeGenerator ( ) { 
cerr<<"CPPCodeGenerator "<<this<<" destroyed"<<endl;
};

//  
// Methods
//  

QString CPPCodeGenerator::getLanguage() {
        return "Cpp";
}

bool CPPCodeGenerator::isType (QString & type) 
{
   if(type == "CPPCodeGenerator")
	return true;
   return false;
}


// Accessor methods
//  


// Public attribute accessor methods
//  


/**
 * Set the value of m_cppMethodCommentStyle
 * @param new_var the new value of m_cppMethodCommentStyle
 */
void CPPCodeGenerator::setCPPMethodCommentStyle ( CommentStyle new_var ) {
	m_cppMethodCommentStyle = new_var;
}

/**
 * Get the value of m_cppMethodCommentStyle
 * @return the value of m_cppMethodCommentStyle
 */
CPPCodeGenerator::CommentStyle CPPCodeGenerator::getCPPMethodCommentStyle ( ) const {
	return m_cppMethodCommentStyle;
}

// Other methods
//  

/**
 * @return	ClassifierCodeDocument
 * @param	classifier 
 * @param	this This package generator object.
 */
CodeDocument * CPPCodeGenerator::newClassifierCodeDocument (UMLClassifier * classifier) 
{
	return (CodeDocument*) NULL;
}

CodeClassField * CPPCodeGenerator::newCodeClassField (ClassifierCodeDocument * doc, UMLAttribute * at) {
        return (CodeClassField*) NULL;
}

CodeClassField * CPPCodeGenerator::newCodeClassField (ClassifierCodeDocument * doc, UMLRole * role) {
        return (CodeClassField*) NULL;
}

CodeOperation * CPPCodeGenerator::newCodeOperation(ClassifierCodeDocument *doc, UMLOperation *op)
{
        return (CodeOperation*) NULL;
}

CodeAccessorMethod * CPPCodeGenerator::newCodeAccessorMethod(CodeClassField *cf , CodeAccessorMethod::AccessorType type) {
        return (CodeAccessorMethod*) NULL;
}

CodeClassFieldDeclarationBlock * CPPCodeGenerator::newDeclarationCodeBlock (CodeClassField * cf) {
        return (CodeClassFieldDeclarationBlock*)NULL;
}


/**
 * @return	CPPMakefileCodeDocument
 * @param	this 
 */
/*
CPPMakefileCodeDocument CPPCodeGenerator::newMakefileCodeDocument ( ) {

}
*/

void CPPCodeGenerator::loadFromXMI(QDomElement & node) {

}

bool CPPCodeGenerator::saveToXMI ( QDomDocument & doc, QDomElement & root ) {
	return false;
}

void CPPCodeGenerator::initAttributes ( ) {
	m_cppMethodCommentStyle = DoubleSlash;
}


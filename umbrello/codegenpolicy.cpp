
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/*  This code generated by: 
 *      Author : thomas
 *      Date   : Mon Jun 16 2003
 */


#include "codegenpolicy.h"

// Constructors/Destructors
//  

CodeGenPolicy::CodeGenPolicy ( ) {
	initFields();
};

CodeGenPolicy::~CodeGenPolicy ( ) { };

//  
// Methods
//  


// Accessor methods
//  


// Public attribute accessor methods
//  


/**
 * Set the value of m_overwritePolicy
 * Policy of how to deal with overwriting existing files. Allowed values are "ask",
 * "yes" and "no".
 * @param new_var the new value of m_overwritePolicy
 */
void CodeGenPolicy::setOverwritePolicy ( QString new_var ) {
	m_overwritePolicy = new_var;
}

/**
 * Get the value of m_overwritePolicy
 * Policy of how to deal with overwriting existing files. Allowed values are "ask",
 * "yes" and "no".
 * @return the value of m_overwritePolicy
 */
QString CodeGenPolicy::getOverwritePolicy ( ) {
	return m_overwritePolicy;
}

/**
 * Set the value of m_codeVerboseSectionComments
 * Whether or not verbose code commenting for sections is desired. If true, comments
 * for sections will be written even if the section is empty. 
 * @param new_var the new value of m_codeVerboseSectionComments
 */
void CodeGenPolicy::setCodeVerboseSectionComments ( bool new_var ) {
	m_codeVerboseSectionComments = new_var;
}

/**
 * Get the value of m_codeVerboseSectionComments
 * Whether or not verbose code commenting for sections is desired. If true, comments
 * for sections will be written even if the section is empty. 
 * @return the value of m_codeVerboseSectionComments
 */
bool CodeGenPolicy::getCodeVerboseSectionComments ( ) {
	return m_codeVerboseSectionComments;
}

/**
 * Set the value of m_codeVerboseDocumentComents
 * Whether or not verbose code commenting for documentation is desired. If true,
 * documentation for various code will be written even if no code would normally be
 * created at that point in the file.
 * @param new_var the new value of m_codeVerboseDocumentComents
 */
void CodeGenPolicy::setCodeVerboseDocumentComents ( bool new_var ) {
	m_codeVerboseDocumentComents = new_var;
}

/**
 * Get the value of m_codeVerboseDocumentComents
 * Whether or not verbose code commenting for documentation is desired. If true,
 * documentation for various code will be written even if no code would normally be
 * created at that point in the file.
 * @return the value of m_codeVerboseDocumentComents
 */
bool CodeGenPolicy::getCodeVerboseDocumentComents ( ) {
	return m_codeVerboseDocumentComents;
}

/**
 * Set the value of m_headerFile
 * location of the header file template.
 * @param new_var the new value of m_headerFile
 */
void CodeGenPolicy::setHeaderFile ( QString new_var ) {
	m_headerFile = new_var;
}

/**
 * Get the value of m_headerFile
 * location of the header file template.
 * @return the value of m_headerFile
 */
QString CodeGenPolicy::getHeaderFile ( ) {
	return m_headerFile;
}

/**
 * Set the value of m_lineEndingChars
 * @param new_var the new value of m_lineEndingChars
 */
void CodeGenPolicy::setLineEndingChars ( QString new_var ) {
	m_lineEndingChars = new_var;
}

/**
 * Get the value of m_lineEndingChars
 * @return the value of m_lineEndingChars
 */
QString CodeGenPolicy::getLineEndingChars ( ) {
	return m_lineEndingChars;
}

// Other methods
//  


/**
 * basic constructor.
 * @return	CodeGenPolicy
 */
CodeGenPolicy CodeGenPolicy::CodeGenPolicy ( ) {

}


/**
 * @return	CodeGenPolicyDialog
 */
CodeGenPolicyDialog CodeGenPolicy::getDialog ( ) {

}


/**
 * @return	QString
 */
QString CodeGenPolicy::toXML ( ) {

}


/**
 */
void CodeGenPolicy::init ( ) {

}

void CodeGenPolicy::initFields ( ) {
	m_overwritePolicy = "ask";
	m_codeVerboseSectionComments = false;
	m_codeVerboseDocumentComents = false;
	m_lineEndingChars = "\n";
}


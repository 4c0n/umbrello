
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/*  This code generated by: 
 *      Author : thomas
 *      Date   : Fri Jun 20 2003
 */


#ifndef CODEOPERATION_H
#define CODEOPERATION_H

#include <qstring.h>
#include <qptrlist.h>

#include "codemethodblock.h"
#include "operation.h"

// class CodeParameter;

class CodeOperation : public CodeMethodBlock
{
	Q_OBJECT
public:

	// Constructors/Destructors
	//  

	/**
	 * Constructors 
	 */
        CodeOperation ( ClassifierCodeDocument * doc , UMLOperation * parent, QString body, QString comment);
        CodeOperation ( ClassifierCodeDocument * parent, UMLOperation * parent );

	/**
	 * Empty Destructor
	 */
	virtual ~CodeOperation ( );

	/**
	 * Add a Parameter object to the m_parameterVector List
	 */
	//void addParameter ( CodeParameter * add_object );

	/**
	 * Remove a Parameter object from m_parameterVector List
	 */
	//void removeParameter ( CodeParameter * remove_object );

	/**
	 * Get the list of Parameter objects held by m_parameterVector
	 * @return QPtrList<CodeParameter> list of Parameter objects held by
	 * m_parameterVector
	 */
	//QPtrList<CodeParameter> getParameterList ( );

	/**
	 * Get the parent UMLOperation of this codeoperation.
	 */
	UMLOperation * getParentOperation( );

	UMLObject * getParentObject( );

        /**
         * Save the XMI representation of this object
         * @return      bool    status of save
         */
        virtual bool saveToXMI ( QDomDocument & doc, QDomElement & root ) = 0;

        /**
         * load params from the appropriate XMI element node.
         */
        virtual void loadFromXMI ( QDomElement & root ) = 0;

	/** Find the value of the tag that this operation would have.
	 */
	static QString findTag (UMLOperation * op) {
        	return QString("operation_" + QString::number(op->getID()));
	}

        /** set the class attributes from a passed object
         */
        virtual void setAttributesFromObject (TextBlock * obj);

protected:

	// list of parameters used by this code operation.
	QPtrList<CodeParameter> m_parameterVector;

        /** set attributes of the node that represents this class
         * in the XMI document.
         */
        virtual void setAttributesOnNode ( QDomDocument & doc, QDomElement & blockElement);

        /** set the class attributes of this object from
         * the passed element node.
         */
        virtual void setAttributesFromNode ( QDomElement & element);

	virtual void updateMethodDeclaration() = 0;
	virtual void updateContent() = 0;

private:

	UMLOperation * m_parentOperation;
	void init (UMLOperation * parentOp);

};

#endif // CODEOPERATION_H
